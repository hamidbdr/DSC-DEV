version: '3.8'
services:

  api:
    build:
      context: backend
      dockerfile: Dockerfile.dev    
    container_name: api_backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 80 --reload

    ports:
      - '81:80'
    volumes:
      - ./backend:/app

    environment:
      - DATABASE_URL=postgresql://dev_user:dev_password@postgresdbserver:5432/dev_db"
    depends_on:
      - postgresdbserver
      - celery_worker

  postgresdbserver:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=dev_db

  
      
  client:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    container_name: client_frontend
    ports:
      - '5000:5000'
    volumes:
      - ./frontend:/app
      - /app/node_modules


  redis:
    image: redis:7-alpine

  celery_worker:
    build:
      context: backend
      dockerfile: Dockerfile.dev    
    container_name: celery_worker_container
    command: celery -A worker.Celery_app worker --loglevel=info 
    volumes:
      - ./backend/celery_worker:/app
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0      
    depends_on:
      - redis
      - postgresdbserver

volumes:
  postgres_data:          